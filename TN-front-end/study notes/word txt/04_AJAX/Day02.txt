1.简化document.getElementById()
  该方法是根据指定的id获取对应的HTML元素
      /*
        参数id：要获取的元素的id值
        返回值：获取的对应的HTML元素
      */
      function $(id){
         return document.getElementById(id);
      };
      调用：$(id)
     练习：
       1.创建一个common.js的文件，封装$(),负责接收一个id值作为参数，并返回对应的DOM对象
       2.在网页中创建一个文本框，一个div,一个按钮
       3.点击按钮时，将文本框的数据以二级标题的形式显示在div中（$()）
2.HTML元素的事件
  1.什么是事件
    允许通过用户的行为来激发的操作就是事件
    常见事件：onclick(单击事件)
  2.其它事件
    1.文本框与密码框-onblur(失去焦点)
      onblur事件：失去焦点事件
    2.文本框与密码框-onfocus
      onfocus事件:获取焦点的事件
    练习：
      1.创建一个网页
      2.页面中创建如下几个元素：
        1.文本框-用户名称：uname
	2.密码框-用户名称：upwd
	3.密码框-确认密码：cpwd
	以上三个元素，各创建一个span元素
      3.添加以下事件
        1.文本框获取焦点时，提示“用户名名称6-18位”
	2.文本框失去焦点时，判断，用户名称是否为空并给出提示（用户名不能为空/通过）
	3.upwd获取焦点时，提示“密码6-18位”
	4.upwd失去焦点时，判断，密码框是否为空给出相应提示
	5.cpwd失去焦点时，判断cpwd的值是否与upwd的值一致，并给出提示
  3.body的onload事件
    当网页加载时要执行的操作
    方式1：<body onload="函数()">
    方式2：window.onload=function()
  4.select的onchange事件
    当选项框中的内容发生改变时要触发的事件
3.AJAX
  1.名词解释
    1.同步（Synchronous）
      在一个任务进行中时，不能开启其它的任务
      同步访问：浏览器在向服务器发送请求的时候，浏览器只能等待服务器的响应，不能做其它的事情。
      出现场合：
         1.地址栏输入网址访问页面（www.baidu.com）
	 2.a标记默认跳转
	 3.submit按钮的表单提交
    2.异步（Asynchronous）
      在一个任务进行中时，可以开启其它的任务
      异步访问：浏览器在向服务器发送请求时，不耽误用户在网页上做其它的操作
      使用场合：
         1.用户名的重复验证
         2.聊天室
	 3.股票走势图
	 4.搜索框建议（百度，京东）
  2.AJAX
    1.Asynchronous Javascript And Xml
      异步的      js         和 xml
    2.本质:
       使用js提供的异步对象（XMLHttpRequest）,异步的向服务器发送请求，并接受响应数据（数据格式是Xml）
       AJAX请求中，服务器响应回来的数据部分数据而不是完整的页面，并且可以以无刷新的效果来更改页面的局部内容。
    3.创建XMLHttpRequest对象-异步对象（xhr）
      标准创建：
          var xhr=new XMLHttpRequest();
      IE8以下：
          var xhr=new ActiveXObject("Microsoft.XMLHttp");
      允许通过window.XMLHttpRequest 来判断浏览器是否支持标准创建，如果浏览器不支持标准创建，那么window.XMLHttpRequest的值就是null
          if(window.XMLHttpRequest){
	     var xhr=new XMLHttpRequest();
	  }else{
	     var xhr=new ActiveXObject("Microsoft.XMLHttp");
	  }
       练习：
          1.创建一个xhr对象，并且将创建好的对象打印在控制台上，观察结果 5分
	  2.创建一个函数，creatXhr()
	  3.在函数体内，判断浏览器是否支持标准创建，如果支持返回标准创建的对象，否则返回创建好的IE8以下的异步对象（返回值）
    4.XHR常用方法和属性（重点）
      1.open()
        作用：创建请求
	语法：xhr.open(method,url,isAsyn);
	   1.method
	     string类型
	     请求方式：get/post
	   2.url
	     string类型
	     请求地址
	   3.isAsyn
	     boolean类型
	     指定采用同步（false）还是异步(true)的方式发送请求
	练习：
	  1.创建一个网页，网页中创建一个按钮，单击时，完成以下功能：
	     1.获取xhr对象
	     2.创建一个请求，采用异步的方式，get的请求方式，向response.php发送一个请求
	     3.创建response.php,响应输出一句话“我的第一个AJAX程序”
      2.readyState 属性
        作用：表示xhr对象的请求状态
	值：0-4表示5个状态
	   0：请求尚未初始化
	   1：已经打开到服务器的链接，正在发送请求中
	   2：请求完成
	   3.正在接收服务器端的响应
	   4.接收响应数据成功
	 注意：当readyState的值为4的时候，才表示所有的响应都已经接收完毕。
      3.status 属性
        作用：表示的是服务器的响应状态码
	值：
	  记住一个值 ：200
	  当status的值是200的时候，表示服务器已经正确的处理请求以及给出响应。
      4.onreadystatechange事件
        作用：当xhr的readyState属性值发生改变的时候，要自动激发的操作
	(xhr对象的状态在做一些改变时，这个事件会一直监视着它)
	语法：
       onreadystatechange=function(){
	//判断xhr的readyState为4并且xhr的status值为200，就可以获取/响应数据了
	  if(xhr.readyState==4&&xhr.status==200){
	      //接收响应回来的结果
	      var resText=xhr.responseText;  
	      console.log(resText);
	  }

       }
      5.send()
        作用：发送请求
	语法：xhr.send(body)
	 body:请求主体
	 如果没有请求主体，body位置处为null(get)
	 如果有请求主体，则放请求主体数据到body位置(post)

     5.发送异步请求的步骤
       1.创建xhr对象
       2.创建请求
       3.设置xhr的onreadystatechange(回调函数)
          判断状态，并接收响应回来的数据
       4.发送请求

       练习：
         1.创建一个php文件，响应输出一句话“我的AJAX练习”
	 2.创建网页，在网页中增加一个按钮，一个div元素id为show,单击按钮时，异步向php文件发送一个请求，并将响应回来的数据以h1标题方式显示在div中。
     6.使用get提交方式，发送请求数据（带参数）
       http://127.0.0.1/login.php?uname=value1&upwd=value2
       练习：
         1.创建一个网页
	   添加一个文本框框（id=uname）
	   添加一个按钮
	   单击按钮时，将文本框中的数据作为参数，异步的提交给ajax-get.php页面，并且将响应回来的数据显示在一个div里面
	   url="ajax-get.php?uname="+value1;
	 2.创建ajax-get.php
	   1.接收异步请求提交过来的数据
	   2.将数据拼接成“欢迎XXX”,再响应给浏览器

       

        

      
      

    