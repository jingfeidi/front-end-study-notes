1.外边距
  1.什么是外边距
    围绕在元素边框外的空白距离，就是外边距
    也能表示当前元素与其他元素之间的空白距离
  2.语法
    属性：
       margin 定义某个元素四个方向的外边距
       margin-top/bottom/left/right 定义单边的外边距
    取值：
       1.具体数值，以px为单位
       2.取值为负
         让元素向相反的方向移动
	 margin-left:
	  取值为正，让元素向右移动
	  取值为负，让元素向左移动
	 margin-top:
	  取值为正，让元素向下移动
	  取值为负，让元素向上移动
       3.取值为%
         外边距的值，是父元素的宽或高的占比（50%）
       4.取值为auto
         自动计算外边距的值（控制块级元素水平居中对齐）
       练习：
         页面中新建两div元素，设置第一个div的左外边距为40px,第二个div在页面中水平居中显示
    简写方式：
        1.margin:value
	  四个方向的外边距
	2.margin:v1 v2;
	  v1:上下外边距
	  v2:左右外边距
	3.margin:v1 v2 v3;
	  v1:上外边距
	  v2:左右外边距
	  v3:下外边距
	3.margin:v1 v2 v3 v4;
	         上 右 下 左  （顺时针方向）
  3.自带外边距的元素
    body,h1~h6,p,ul,ol,dl,dd,pre
    通过CSS Reset(css重写)的手段，来重置具备外边距的元素
     body,h1,h2,h3,h4,h5,h6,ul,ol,dl,dd,pre{
        margin:0;
     }
  4.外边距的特殊效果
    1.外边距合并
      当两个垂直外边距相遇时，他们将合并为一个，最终取决于两个外边距中距离较大的那个。
      如果两个外边距相遇时值相等，那么取其中一个值。
    2.外边距的溢出
      在某些条件下，为子元素设置上外边距时，有可能会作用到父元素上。
          1.父元素没有上边框
	  2.为子元素设置上外边距时
      练习：
        1.创建两个div，id为d1和d2,分别设置不同背景颜色，尺寸200*200；
	2.在d2中嵌套一个子元素div,id="d3",设置其尺寸为100*100，并设置其背景颜色
	3.设置d3的上外边距为50px,观察其结果。
     *解决溢出方案：
        1.为父元素增加上边框
	  弊端：对父元素的高度有影响
	2.使用父元素的上内边距来取代子元素的上外边距
	  弊端：对父元素的高度有影响
	3.在父元素的第一个子元素位置处，增加一个空(table)
     *行内元素以及行内块元素的垂直外边距
         1.行内元素垂直外边距无效（img除外）
	 2.行内块元素，设置垂直外边距时，整行元素都跟着发生改变
2.内边距
  1.什么是内边距
    元素边框与内容之间的空白距离
    内边距会扩大元素边框占地区域
  2.语法
    属性：
       padding 四个方向的内边距
       padding-top/bottom/left/right 设置单边内边距
    取值：
          以px为单位的数值
          以%形式设置
    简写方式：
          1.padding:value;  四个方向的内边距
	  2.padding:v1 v2; 
	    v1:上下内边距
	    v2:左右内边距
	  3.padding:v1 v2 v3;
	    v1:上
	    v2:左右
	    v3:下
	  4.padding:v1 v2 v3 v4;
	            上 右 下 左 （顺时针）
      练习：
      1.创建两个div元素，id分别为d1和d2,尺寸200*200，并设置边框为2px solid #f00;随意编写内容
      2.为d1元素增加上下左右四个方向的内边距各20px，观察效果
  3.属性：box-sizing
    作用：指定框模型的计算方式
    取值：
       1.content-box
         默认值，采用默认的计算元素的占地区域
	 实际占地宽度=左右边框+左右外边距+左右内边距+width;
	 实际占地高度=上下边框+上下外边距+上下内边距+height;
       2.border-box
         元素的尺寸，会包含border以及padding的值
	 实际占地宽度=width(包含了border和padding)
	 实际占地高度=height(包含了border和padding)
      练习：完成如果所示的效果
3.背景属性
  背景：可以是单一颜色或图片填充元素
  1.背景色
    属性：background-color
    取值：合法的颜色值
    注意：背景颜色默认是从边框的位置处开始填充的
  2.背景图片
    属性：background-image
    取值：url(图片的路径);
    ex:background-image:url(a.jpg);
  3.背景图片平铺
    属性：background-repeat
    取值：
       repeat 默认值，横向纵向都平铺
       no-repeat 不平铺（图片只显示一次）
       repeat-x 只在水平方向平铺
       repeat-y 只在垂直方向平铺
  4.背景图片尺寸
    属性：background-size
    取值：
       1.width/height  (ex:200px 300px)
       2.width%/height%  (ex:50% 50% 是元素自己的高宽占比)
       3.cover
         将背景图等比放大，直到背景图完全覆盖到元素的所有区域为止。
       4.contain
         将背景图等比放大，直到背景图碰到元素的某一个边缘为止
  5.背景图片固定
    作用：将背景图固定在网页的某个位置处，一直在可视区域中，不会随着滚动条而发生位置的变化。
    属性：background-attachment
    取值：
       1.scroll 默认值，滚动
       2.fixed 固定
    练习：
      给网页的body设置背景图（小图），给body设置高度为2000px,把图片固定在网页中，拖动滚动条，观察页面效果。
  6.背景图片定位  
    作用：改变背景图在元素中的位置
    属性：background-position
    取值：
       1.x y  具体的数值（px）
         x:
	   背景图水平偏移距离
	   取值为正，向右移动
	   取值为负，向左移动
	 y:
	   背景图垂直偏移距离
	   取值为正，向下移动
	   取值为负，向上移动
       2.x% y%
         0% 0% 背景图在左上角
	 100% 100% 背景图在右下角
	 50% 50% 背景图在中间位置
       3.关键字
	 x:left/center/right
	 y:top/center/bottom
	 ex:background-position:right top;
	 
        练习：
	  只显示图片的中花朵
  7.背景简写属性
    在一个属性中指定背景的多个属性值
    属性：background
    取值：color url() repeat attachment position
    ex：
      background:gray url(a.jpg);
    注意：
      如果不设置其中某个属性值的话，该位置采用默认值。
    
    课后作业：
      (所需要的素材在css-Day02-图片素材.rar)
      完成css-Day03文件夹中"课后作业.png"的效果

	  
    