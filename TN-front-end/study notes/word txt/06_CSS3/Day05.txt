1.浮动
 1.浮动引发的特殊效果
  1.元素一旦浮动起来以后就会变成块级元素
    允许修改尺寸
    能正常处理垂直方向外边距
  2.当父元素显示不下所有已浮动元素时，最后一个将换行，但是，有可能被卡住；
  3.元素一旦浮动起来后，宽度将以内容为主（未指定宽度情况下）；
  4.文本，行内元素，行内块元素是采用环绕的方式来排列的，是不会别浮动元素压在底下的，而会巧妙的避开浮动元素。
 2.清除浮动带来的影响
  元素一旦浮动起来之后，就会对后续元素带来一定的位置影响（后续元素要上前补位），如果后续元素不想被影响（不想补位），那么就可以通过清除浮动的方式来解决
  属性：clear
  取值：
     1.left
       清除当前元素前面的元素左浮动所带来的影响
     2.right
       清除当前元素前面的元素右浮动所带来的影响
     3.both
       清除当前元素前面元素任何一种浮动所带来的影响
     4.none
       默认值，不做任何的清除浮动操作
 3.浮动元素对父元素高度的影响
  1.元素的高度都是以未浮动元素的高度为准的，浮动元素是不占页面的高度的
     解决父元素的高度方案如下：
        1.直接设置父元素的高度
	  弊端：不是每次都知道父元素的高度
	2.设置父元素也浮动
	  弊端：不是任何时候父元素都需要浮动，而且浮动会影响后续元素
	3.为父元素设置overflow
	  取值：hidden或auto
	  弊端：如果有内容需要溢出显示的话，也会一同被隐藏
	4.在父元素中，追加空子元素(块级)，并设置其clear:both;
2.显示
  1.显示方式
    1.什么是显示方式
      决定了元素在网页中的表现形式（块级，行内，行内块）
    2.语法
      属性：display
      取值：
         1.none 不显示元素-隐藏
	   特点：脱离文档流，不占据页面空间
	 2.block
	   让元素表现的和块级元素一致
	   特点：
	      独占一行，可是修改高宽
	 3.inline
	   让元素表现的和行内元素一致
	   特点：
	      不允许修改尺寸
	      多个元素在一行中显示
	      无法设置垂直外边距
	 4.inline-block
	   让元素表现的和行内块元素一致
	   特点：
	     多个元素在一行中显示，但是可以修改尺寸
	 5.table
	   让元素表现的与表格一致
	   特点：
	      尺寸以内容为准
	      每个元素独占一行
	      允许修改尺寸
      练习：
         1.网页中创建5个a元素
	 2.为每个a元素设置尺寸为100*100
	 3.分别为a元素设置不同的显示方式（none,inline,block,inline-block,table）
  2.显示效果
    1.显示/隐藏
      属性：visibility
      取值：
          1.visible:默认值，元素可见
	  2.hidden:元素不可见-隐藏
      面试：display:none和visibility:hidden的区别
            display:none 不占页面空间
	    visibility:hidden 占页面空间
    2.透明度
      属性：opacity
      取值：0.0（完全透明）~1.0（完全不透明）之间的小数
    3.垂直方向对齐方式
      属性：vertical-align
      场合：
         1.表格中使用
	   取值：top/bottom/middle
	 2.图片（img）中使用
	   取值：
	      top：上
	      bottom：下
	      middle：中间
	      baseline:基线对齐，默认值
3.光标
  1.作用
    改变鼠标悬停在元素上时，鼠标的状态
  2.语法
    属性：cursor
    取值：
        1.default: 默认
	2.pointer: 小手
	3.crosshair: +
	4.text: I
	5.wait: 等待
	6.help: 帮助
     练习：
       新建一个div元素，当鼠标移入到div上时，让光标变成小手状态。
4.列表
  1.列表项标记
    属性：list-style-type
    取值：
       1.none
       2.disc
       3.circle
       4.square
  2.列表项图像
    作用：使用自定义图像作为列表项标识
    属性：list-style-image
    取值：url(图像路径);
  3.列表项位置
    作用：将默认的列表项标识的位置，放到li里面
    属性：list-style-position
    取值：
       1.outside 默认值，将标识显示在li外面的
       2.inside 将标识放于li里面
  4.列表属性简写
    属性：list-style
    取值：type url() position;
    常用方式：list-style:none;
    列表的使用场合：
       横向排列或纵向排列的内容，都可以使用列表来实现。
5.定位
  相对定位，绝对定位，固定定位
  1.定位相关属性
    属性：position
    取值：
       1.static:静态，默认值
       2.relative:相对定位
       3.absolute:绝对定位
       4.fixed:固定定位
  2.偏移属性
    top/bottom/left/right
    以上四个属性的取值均为数字
    ex:
      top:150px 元素向下移动150px
      left:20px 元素向右移动20px
      right:-150px 元素向右移动150px
    注意：
      只有已定位元素才能使用偏移属性
  3.定位详解
    1.相对定位
      1.什么是相对定位
        元素相对于它原来的位置偏移某个距离
      2.使用场合
        做元素位置微调时使用
      3.语法
	      position:relative;
	      配合偏移属性来实现位置的移动
	      left:10px;
	      top:10px;
    2.绝对定位
      1.什么是绝对定位&特点
        1.绝对定位的元素会脱离文档流-不占页面空间
	2.绝对定位的元素会相对于离他最近的，已定位的，祖先元素 去实现位置的初始化。
	3.如果没有已定位的祖先元素，那么该元素就相对于body去实现位置的初始化
	4.配合偏移属性 实现元素位置的修改
      2.语法
        position:absolute;
	配合偏移属性实现位置的修改
      3.使用场合
        1.有堆叠效果的元素
	2.弹出菜单
      4.注意：
        1.脱离文档流-不占据页面空间
	2.绝对定位元素会变成块级元素
    
      5.堆叠顺序
        一旦元素变为已定位元素的话，元素们则有可能出现堆叠的效果
	属性：z-index
	取值：无单位的数字，数字越大越靠上
        注意：
	  1.只有已定位元素才能实现堆叠顺序的改变（z-index）
	  2.父子元素间，z-index无效，永远都是子元素压在父元素上方
    3.固定定位
      1.什么是固定定位
        将元素固定在网页的某个位置处，位置不会随着滚动条而发生改变，固定在可视区域中。
      2.语法
        position:fixed;
	配合偏移属性使用
      注意：
        1.固定定位的元素永远都是相对于body去实现位置的初始化和偏移。
	2.固定定位的元素会变成块级元素
	3.固定定位元素会脱离文档流-不占页面空间
       练习：
         设置当前网页的高度为2000px，在网页中增加一个div元素，设置其尺寸为50*200，背景颜色为蓝色，并将该div固定在网页的右下方（right:50px,bottom:80px;）

       练习：完成学子商城首页banner图效果（css-Day05文件夹中"作业1.png"）
       课后作业：
           完成学子商城头部效果（css-Day05文件夹中"作业2.png"）


      
        



	   
   
      