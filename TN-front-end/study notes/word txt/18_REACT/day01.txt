React（ReactJS ReactNative）

一、ReactJS概述
	what
	 是facebook一个构建用户界面的js库
	where
	 用在数据操作比较频繁（视图更新频繁--》DOM操作-》浏览器的性能瓶颈）
	why
		①浏览器的性能瓶颈
		  虚拟DOM 最大限度减少DOM的操作
		②代码的开发和维护成本很高
		  单向数据流 减少业务的复杂度  
        how
		方式1：cli
		 https://github.com/facebook/create-react-app
		方式2：直接引入对应的js文件

二、ReactJS的核心概念
        0、基础知识
	 ①方法
	   ReactDOM.render(要渲染的元素，渲染的容器)
	 ②jsx
	   ReactDOM.render(
	   <h1>hello world</h1>
	   ，渲染的容器)
	 ③babel
	    js编译器

	1、JSX(推荐使用)
	  JSX(javaScript+xml)不是一种新的语言,只不过是允许在js中编写标签
	  
 		 注意事项：不允许直接渲染多个元素
	 jsx语法：
		①遇到<,如果首字母是小写，就会用html去解析；否则就会用react按照组件去处理
		②遇到{,就会用js来执行代码块
	
		练习:
		demo03_lianxi.html
		希望将h2的标签渲染，h2要执行个3目运算 

	2、Component
	 Everything is Component!
	 组件是可被反复使用的，带有特定功能的视图
	 2.1 review:
	     Vue.component('my-header',{
		 template:``
		})
	     .vue 
	      <template></template>
	      <script></script>
	      <style></style>
	     demo01.component.ts
	      import {Component} from '@angular/core'
	       
	       @Component({
	         selector:'',
		 template/templateUrl:'',
		 styleUrls:[]

	       })

	      export class Demo01Component{}
	 2.2 React:
	  ①创建组件类：
		var MyComponent = React.createClass({
		  render:function(){
		    return <h2>...</h2>
		  }
		})
	  ②调用组件类：
		<MyComponent></MyComponent>
	  ③注意事项
	    组件类的名称必须是全驼峰
	    组件类要渲染的内容 不能直接返回多个元素
	    组件类在指定要渲染的元素时，第一个标签不能直接换行
	 2.3 复合组件
	  在一个组件中 可以调用其他的组件
	 练习：
	  demo06_lianxi.html
	  创建一个复合组件，显示一个登录窗口
	  
	3、Props
	  在ng和vue中 是可以通过属性进行传值的。
	 3.1 基本用法
	  vue:
		① <son sonName='zhangsan'></son>
		② Vue.component('',{
			props:['sonName'],
			//this.sonName
		 
		})
	  angular:
		①<son sonName='zhangsan'></son>
		② import {Input} from '@angular/core'

		@Input() sonName="";
		this.sonName
	  react:
		①<son sonName='zhangsan'></son>
		②this.props.sonName
	   demo08_lianxi.html (:- 15:40)
		通过props来重构登录窗口
		添加功能：在input显示占位符 请输入用户名/请输入密码
	
	 3.2 this.props.children
	  调用组件时所指定的属性 和组件内this.props对应的中的属性是一一对应的，其中有一个是比较特殊的 this.props.children
	  
	  方法：
	  React.Children.map(
	   this.props.children,
	   function(child){
		//
	   }
	  )
	 
	 3.3 子与父的通信
		可以成功的实现在子组件中调用父组件的方法

		如果父组件的方法是支持传参的，
		子组件--》父组件

		基本步骤：
		 ①在父组件中 定义一个带有参数的方法
		 ②调用子组件时，将方法通过属性传递子组件
		 ③子组件调用
		   this.props.func(123);

	4、Ref
	   Vue:
		<son ref='mySon'></son>
		this.$refs.mySon
	   React:
		<son ref='mySon'></son>
		this.refs.mySon
	
		创建AComponent BComponent，在MainComponent调用A和B
		A：input
		B: button
		在点击B组件的按钮 获取A组件中input中的值

		4.1组件的创建和调用
		4.2完成A组件中输入框的值 传递父组件Main
		 什么时候传？触发onChange
		 怎么传？ ①父 定义 方法 ②方法给子 ③儿子 调用
		4.3。。


	5、State