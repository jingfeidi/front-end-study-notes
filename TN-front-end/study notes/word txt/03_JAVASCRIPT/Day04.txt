1.switch...case结构
  1.作用（使用场合）
    等值判断
  2.语法
    switch(值/表达式){
       case 值1：
          语句块1;
	  break;//结束switch结构，可选的
       case 值2：
          break;
       ....
       default:
          语句块n;
	  break;
    }
    注意：swith后的值或表达式，与case后的值进行比较的时候使用的===判断
    ex：
      弹出框中输入1-7之间的数字
         输入1：今天吃红烧排骨
	 输入2：今天吃红烧丸子
	 输入3：今天吃红烧鱼
	 输入4：今天吃红烧猪蹄
	 输入5：今天吃红烧茄子
	 输入6：今天休息
	 输入7：今天休息
  3.特殊用法
    执行相同的操作时：
      switch(值/表达式){
         case 值1：
	 case 值2：
	 case 值3：
	    语句块1;
      }
     练习：
       使用switch...case结构改版日期计算（昨天课后作业日期计算）5分钟
2.循环结构
  1.特点
    1.循环条件：循环的开始和结束
    2.循环操作：要执行的相同或相似的语句
  2.循环-while
    1.语法
      while(条件){
         //循环体-循环操作
	 //更新循环条件
      }
      ex：打印输入1-100之间的数字
      练习:打印1-100之间所有数的和 3分
         
    2.循环的流程控制
      1.break
        作用：终止整个循环的运行
      2.continue
        作用：终止本次循环的运行，继续执行下一次循环
	ex:循环从弹出框中输入信息，并且打印，直到输入exit为止。
  3.循环-do...while
    1.语法
      do{
        循环体
      }while(条件);
      执行流程：
        1.先执行循环体
	2.再判断循环条件
	  如果条件为真，则继续执行循环体
	  如果条件为假，则跳出循环体操作
	练习1:
	用do...while改版while循环输入信息操作3分
	      1.从弹出框中循环输入一段信息并打印在控制台
	      2.输入exit退出程序
        练习2：猜数字游戏 8分钟
	    1.随机生成一个1-100之间的数字
	      Math.random(); 生成0-1之间的小数
	    var r=parseInt(Math.random()*100)+1;
	    2.让用户输入一个整数
	     如果输入的数比随机数大，提示“猜大了”
	     如果输入的数比随机数小，提示“猜小了”
	     否则：猜对了
	     允许循环猜数
	    3.输入exit也可以退出游戏
  4.循环-for
    1.ex
      打印1-100之间的所有的数字
        var i=1; //表达式1
	while(i<=100){ //表达式2
	  console.log(i);
	  i++; //表达式3
	}
    2.for语法
      for(表达式1;表达式2;表达式3){
         循环操作
      }
      表达式1：循环条件的声明
      表达式2：循环条件的判断
      表达式3：更新循环变量
      执行流程：
         1.先执行表达式1
	 2.判断表达式2的结果（boolean类型）
	 3.如果条件为真，则执行循环体，否则退出
	 4.执行完循环体后，再执行表达式3
	 5.判断表达式2的结果（真继续，否则退出）
	ex:
	  实现10！ 
	  10*9*8*7*6*5*4*3*2*1
	  循环条件：
	     从1开始到10结束
	  循环操作：
	      计算每个数字累乘的结果
	练习1：
	定义一个函数，打印乘法口诀表中的任意一行
	    传参，传几，就打印第几行 8分
	    1*1=1
	    1*2=2 2*2=4  line=2
	    1*3=3 2*3=6 3*3=9
	    1*4=4 2*4=8 3*4=12 4*4=16
	    ...
	    每一行就是一个循环，乘号后面的数字就是你想打印的行数，行数其实就是你传的参数，乘号前面的数字永远都是从1开始到打印的行数（循环）。
	练习2：   
	   创建一个函数，计算打印以下数列的和
	   1/1+1/3+1/5+1/7.....+1/999的和
	   循环条件：从1开始，到999结束，分母以2递增
	   循环操作：累加 1/循环条件变量 的和

    3.for三个表达式特殊用法
      for(表达式1;表达式2;表达式3){}
      1.省略表达式
        三个表达式可以任意省略，分号不能省
	但一定要在循环的内部或外部将表达式补充完整（一般省略表达式1）
      2.表达式1和表达式3允许写多个表达式，用逗号隔开
        ex:打印1-100的和
	  function printSum(){
	    for(var i=1,sum=0;i<=100;i++)
	       sum+=i;
	  }
3.循环嵌套
  1.循环嵌套
    在一个循环体的内部，又出现一个循环
      for(var i=1;i<=100;i++){ //外层循环
         for(var j=1;j<=100;j++){ //内层循环
	   
	 }
      }
      外层循环走一次，内层循环走一轮
      练习1：
        在控制台中打印以下图像
	  *
	  **
	  ***
	  ****
	  *****
	  //外层循环打印行数
	  //内层循环打印*
      练习2：打印乘法表 
            1*1=1
	    1*2=2 2*2=4  
	    1*3=3 2*3=6 3*3=9
	    1*4=4 2*4=8 3*4=12 4*4=16
	    ......
4.数组
  1.什么是数组
    在一个变量中保存多个数据
    数组是按照线性顺序来排列的-线性结构
    数组中，除第一个元素外，每个元素都有一个直接的“前驱元素”
    数组中，除最后一个元素外，每个元素都有一个直接的“后继元素”
  2.声明数组 
    语法：
    1.var 数组名=[];
      ex： var names=[];
    2.var 数组名=[元素1,元素2,元素3];    
    ex:var name=["孙悟空","猪八戒","沙和尚"]
    3.var 数组名=new Array();
      创建一个不包含任何元素的空数组。
    4.var 数组名=new Array("孙悟空","猪八戒","沙和尚")
    练习：
      创建一个数组，该数组中保存3名学员的姓名
      创建一个数组，该数组中保存3名学员的年龄
      在控制台中，分两次打印两个数组的值
  
  课后作业：
  打印如图所示的图像
  练习1：
               *
	      **
	     ***
	    ****
	   *****
   练习2：
     *
    ***
   *****
  *******
 *********





